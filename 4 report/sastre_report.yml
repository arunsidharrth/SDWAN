---
- name: Generate SD-WAN Configuration Reports using Sastre
  hosts: localhost
  gather_facts: true
  connection: local
  
  vars:
    # Use environment variables for credentials
    vmanage_host: "{{ lookup('env', 'VMANAGE_HOST') | default('vmanage-amfament-prod.sdwan.cisco.com') }}"
    vmanage_username: "{{ lookup('env', 'VMANAGE_USERNAME') | default('automation') }}"
    vmanage_password: "{{ lookup('env', 'VMANAGE_PASSWORD') | default('') }}"
    vmanage_port: "443"
    
    # Simple directory structure
    generated_dir: "{{ playbook_dir }}/generated"
    report_timestamp: "{{ ansible_date_time.epoch }}"
    
  tasks:
    - name: Validate environment variables are set
      fail:
        msg: "Required environment variable {{ item }} is not set"
      when: vars[item] == ""
      loop:
        - vmanage_host
        - vmanage_username
        - vmanage_password

    - name: Create generated directory
      file:
        path: "{{ generated_dir }}"
        state: directory
        mode: '0755'

    - name: Test vManage connectivity
      uri:
        url: "https://{{ vmanage_host }}/dataservice/system/device/controllers"
        method: GET
        user: "{{ vmanage_username }}"
        password: "{{ vmanage_password }}"
        force_basic_auth: yes
        validate_certs: false
        timeout: 60
        headers:
          Content-Type: "application/json"
      register: connectivity_test
      ignore_errors: true

    - name: Fail if connectivity test failed
      fail:
        msg: "Cannot connect to vManage at {{ vmanage_host }}"
      when: connectivity_test.status != 200

    - name: Generate device templates report
      command: >
        sastre
        --address {{ vmanage_host }}
        --port {{ vmanage_port }}
        --user {{ vmanage_username }}
        --password "{{ vmanage_password }}"
        --verbose
        report
        --workdir {{ generated_dir }}/device_templates_{{ report_timestamp }}
        device_template
      environment:
        PYTHONHTTPSVERIFY: 0
        REQUESTS_CA_BUNDLE: ""
      register: device_templates_report
      ignore_errors: true

    - name: Generate feature templates report
      command: >
        sastre
        --address {{ vmanage_host }}
        --port {{ vmanage_port }}
        --user {{ vmanage_username }}
        --password "{{ vmanage_password }}"
        --verbose
        report
        --workdir {{ generated_dir }}/feature_templates_{{ report_timestamp }}
        feature_template
      environment:
        PYTHONHTTPSVERIFY: 0
        REQUESTS_CA_BUNDLE: ""
      register: feature_templates_report
      ignore_errors: true

    - name: Generate policy definitions report
      command: >
        sastre
        --address {{ vmanage_host }}
        --port {{ vmanage_port }}
        --user {{ vmanage_username }}
        --password "{{ vmanage_password }}"
        --verbose
        report
        --workdir {{ generated_dir }}/policy_definitions_{{ report_timestamp }}
        policy_definition
      environment:
        PYTHONHTTPSVERIFY: 0
        REQUESTS_CA_BUNDLE: ""
      register: policy_definitions_report
      ignore_errors: true

    - name: Generate policy lists report
      command: >
        sastre
        --address {{ vmanage_host }}
        --port {{ vmanage_port }}
        --user {{ vmanage_username }}
        --password "{{ vmanage_password }}"
        --verbose
        report
        --workdir {{ generated_dir }}/policy_lists_{{ report_timestamp }}
        policy_list
      environment:
        PYTHONHTTPSVERIFY: 0
        REQUESTS_CA_BUNDLE: ""
      register: policy_lists_report
      ignore_errors: true

    - name: Generate configuration groups report
      command: >
        sastre
        --address {{ vmanage_host }}
        --port {{ vmanage_port }}
        --user {{ vmanage_username }}
        --password "{{ vmanage_password }}"
        --verbose
        report
        --workdir {{ generated_dir }}/config_groups_{{ report_timestamp }}
        config_group
      environment:
        PYTHONHTTPSVERIFY: 0
        REQUESTS_CA_BUNDLE: ""
      register: config_groups_report
      ignore_errors: true

    - name: Generate comprehensive all items report
      command: >
        sastre
        --address {{ vmanage_host }}
        --port {{ vmanage_port }}
        --user {{ vmanage_username }}
        --password "{{ vmanage_password }}"
        --verbose
        report
        --workdir {{ generated_dir }}/all_items_{{ report_timestamp }}
        all
      environment:
        PYTHONHTTPSVERIFY: 0
        REQUESTS_CA_BUNDLE: ""
      register: all_items_report
      ignore_errors: true
