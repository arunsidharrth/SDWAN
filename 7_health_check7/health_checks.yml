---
- name: SD-WAN Health Checks
  hosts: localhost
  connection: local
  gather_facts: yes
  vars:
    vmanage_host: "{{ lookup('env', 'VMANAGE_HOST') | default('sandbox-sdwan-2.cisco.com') }}"
    vmanage_username: "{{ lookup('env', 'VMANAGE_USERNAME') | default('devnetuser') }}"
    vmanage_password: "{{ lookup('env', 'VMANAGE_PASSWORD') | default('RG!_Yw919_83') }}"
    vmanage_port: "{{ lookup('env', 'VMANAGE_PORT') | default('8443') }}"
    output_dir: "/tmp/sdwan_health_check"
    timestamp: "{{ ansible_date_time.iso8601_basic_short }}"
  
  tasks:
    - name: Display environment check
      debug:
        msg: 
          - "vManage Host: {{ vmanage_host }}"
          - "vManage Username: {{ vmanage_username }}"
          - "vManage Port: {{ vmanage_port }}"
          - "Output Directory: {{ output_dir }}"

    - name: Create generated directory
      file:
        path: "{{ output_dir }}"
        state: directory
        mode: '0755'
      become: false
      ignore_errors: yes

    - name: Check vManage connectivity
      uri:
        url: "https://{{ vmanage_host }}:{{ vmanage_port }}/dataservice/client/server"
        method: GET
        validate_certs: no
        timeout: 10
      register: connectivity_check
      ignore_errors: yes

    - name: Display connectivity results
      debug:
        msg:
          - "Connectivity Status: {{ 'SUCCESS' if connectivity_check.status == 200 else 'FAILED' }}"
          - "Response Code: {{ connectivity_check.status | default('N/A') }}"
          - "Error: {{ connectivity_check.msg | default('None') }}"

    - name: Authenticate to vManage
      uri:
        url: "https://{{ vmanage_host }}:{{ vmanage_port }}/j_security_check"
        method: POST
        body_format: form-urlencoded
        body:
          j_username: "{{ vmanage_username }}"
          j_password: "{{ vmanage_password }}"
        validate_certs: no
        status_code: [200, 302]
      register: auth_response
      when: connectivity_check.status == 200
      ignore_errors: yes

    - name: Get session token
      uri:
        url: "https://{{ vmanage_host }}:{{ vmanage_port }}/dataservice/client/token"
        method: GET
        validate_certs: no
        headers:
          Cookie: "{{ auth_response.set_cookie | default('') }}"
      register: token_response
      when: auth_response is defined and auth_response.status in [200, 302]
      ignore_errors: yes

    - name: Get device status
      uri:
        url: "https://{{ vmanage_host }}:{{ vmanage_port }}/dataservice/device"
        method: GET
        validate_certs: no
        headers:
          Cookie: "{{ auth_response.set_cookie | default('') }}"
          X-XSRF-TOKEN: "{{ token_response.content | default('') }}"
      register: device_status
      when: token_response is defined and token_response.status == 200
      ignore_errors: yes

    - name: Get alarms
      uri:
        url: "https://{{ vmanage_host }}:{{ vmanage_port }}/dataservice/alarms"
        method: GET
        validate_certs: no
        headers:
          Cookie: "{{ auth_response.set_cookie | default('') }}"
          X-XSRF-TOKEN: "{{ token_response.content | default('') }}"
      register: alarms_data
      when: token_response is defined and token_response.status == 200
      ignore_errors: yes

    - name: Create health summary report
      copy:
        content: |
          SD-WAN Health Check Summary
          ===========================
          Timestamp: {{ ansible_date_time.iso8601 }}
          vManage Host: {{ vmanage_host }}:{{ vmanage_port }}
          
          CONNECTIVITY TEST:
          {% if connectivity_check.status == 200 %}
          Status: SUCCESS ✓
          Response Code: {{ connectivity_check.status }}
          {% else %}
          Status: FAILED ✗
          Error: {{ connectivity_check.msg | default('Connection timeout or refused') }}
          {% endif %}
          
          AUTHENTICATION TEST:
          {% if auth_response is defined and auth_response.status in [200, 302] %}
          Status: SUCCESS ✓
          {% elif auth_response is defined %}
          Status: FAILED ✗
          Error: HTTP {{ auth_response.status }}
          {% else %}
          Status: SKIPPED (Connectivity failed)
          {% endif %}
          
          TOKEN RETRIEVAL:
          {% if token_response is defined and token_response.status == 200 %}
          Status: SUCCESS ✓
          {% elif token_response is defined %}
          Status: FAILED ✗
          Error: HTTP {{ token_response.status }}
          {% else %}
          Status: SKIPPED (Authentication failed)
          {% endif %}
          
          DEVICE STATUS:
          {% if device_status is defined and device_status.status == 200 %}
          Status: SUCCESS ✓
          Device Count: {{ device_status.json.data | length | default('N/A') }}
          {% elif device_status is defined %}
          Status: FAILED ✗
          Error: HTTP {{ device_status.status }}
          {% else %}
          Status: SKIPPED (Token retrieval failed)
          {% endif %}
          
          ALARMS CHECK:
          {% if alarms_data is defined and alarms_data.status == 200 %}
          Status: SUCCESS ✓
          Active Alarms: {{ alarms_data.json.data | length | default('N/A') }}
          {% elif alarms_data is defined %}
          Status: FAILED ✗
          Error: HTTP {{ alarms_data.status }}
          {% else %}
          Status: SKIPPED (Token retrieval failed)
          {% endif %}
          
          OVERALL HEALTH:
          {% if connectivity_check.status == 200 and auth_response is defined and auth_response.status in [200, 302] and token_response is defined and token_response.status == 200 %}
          Status: HEALTHY ✓
          {% else %}
          Status: ISSUES DETECTED ✗
          {% endif %}
        dest: "{{ output_dir }}/health_check_summary_{{ timestamp }}.txt"
        mode: '0644'
      ignore_errors: yes

    - name: Display final summary
      debug:
        msg:
          - "=== SD-WAN Health Check Complete ==="
          - "Connectivity: {{ 'SUCCESS' if connectivity_check.status == 200 else 'FAILED' }}"
          - "Authentication: {{ 'SUCCESS' if auth_response is defined and auth_response.status in [200, 302] else 'FAILED' }}"
          - "API Access: {{ 'SUCCESS' if token_response is defined and token_response.status == 200 else 'FAILED' }}"
          - "Report saved to: {{ output_dir }}/health_check_summary_{{ timestamp }}.txt"

    - name: Show generated files
      find:
        paths: "{{ output_dir }}"
        patterns: "health_check_summary_*.txt"
      register: generated_files

    - name: List generated reports
      debug:
        msg: "Generated report: {{ item.path }}"
      loop: "{{ generated_files.files }}"
      when: generated_files.files is defined
